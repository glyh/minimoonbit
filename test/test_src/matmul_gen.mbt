
fn matshow(m: Int, n: Int, mat: Array[Array[Double]]) -> Unit {
  fn loop1(i: Int) -> Unit {
    if i <= m - 1 {
      fn loop2(j: Int) -> Unit {
        if j <= n - 1 {
          let _ = print_int(truncate(mat[i][j]));
          print_endline()
        } else {
          ()
        }
      }; 
      loop2(0)
    } else {
      ()
    }
  }; 
  loop1(0)
};

fn matmul(l: Int, m: Int, n: Int, a: Array[Array[Double]], b: Array[Array[Double]], c: Array[Array[Double]]) -> Unit {
  fn loop1(i: Int) -> Unit {
    if 0 <= i {
      fn loop2(j: Int) -> Unit {
        if 0 <= j {
          fn loop3(k: Int) -> Unit {
            if 0 <= k {
              c[i][j] = c[i][j] + a[i][k] * b[k][j];
              loop3(k - 1)
            } else {
              ()
            }
          };
          let _ = loop3(m - 1);
          loop2(j - 1)
        } else {
          ()
        }
      };
      let _ = loop2(n - 1);
      loop1(i - 1)
    } else {
      ()
    }
  };
  loop1(l - 1)
};

fn main {
  let dummy = Array::make(0, 0.0);
  fn gen_arr(m: Int, n: Int) -> Array[Array[Double]] {
    let mat = Array::make(m, dummy);
    fn init_arr(i: Int) -> Unit {
      if 0 <= i {
        mat[i] = Array::make(n, 0.0);
        init_arr(i - 1)
      } else {
        ()
      }
    };
    let _ = init_arr(m - 1);
    mat
  };

  let a = gen_arr(10, 8);
  let b = gen_arr(8, 9);
  let c = gen_arr(10, 9);

  a[0][0] = 3.1512264315965295; a[0][1] = 3.4266895524040226; a[0][2] = 2.1291301850312854; a[0][3] = 2.7125097759556023; a[0][4] = 0.13863736112764535; a[0][5] = 4.038425888987371; a[0][6] = 1.50434498925659; a[0][7] = 1.5231279828700917;
  a[1][0] = 2.237317235159809; a[1][1] = 4.7784009158178575; a[1][2] = 3.458871020171144; a[1][3] = 3.1127227115214846; a[1][4] = 0.8889748427379013; a[1][5] = 4.629983087147912; a[1][6] = 3.9676614640267043; a[1][7] = 0.15198574144366706;
  a[2][0] = 4.929616533531301; a[2][1] = 2.9903368602069436; a[2][2] = 3.717153684616761; a[2][3] = 1.041274955120317; a[2][4] = 2.1258171245117956; a[2][5] = 1.1513642491719263; a[2][6] = 3.9890169306768053; a[2][7] = 1.2596547496142536;
  a[3][0] = 0.9925800674743401; a[3][1] = 0.9435229408715939; a[3][2] = 1.2342830285893813; a[3][3] = 3.45915060943959; a[3][4] = 4.737255164370352; a[3][5] = 2.774334240383901; a[3][6] = 1.9507490939689887; a[3][7] = 3.768257699706776;
  a[4][0] = 4.386821433706776; a[4][1] = 4.811014892331684; a[4][2] = 2.7908321839554526; a[4][3] = 2.6093385665520508; a[4][4] = 4.132327613503221; a[4][5] = 3.6081805340105615; a[4][6] = 1.5782900656657417; a[4][7] = 1.538684019204573;
  a[5][0] = 1.488330022178157; a[5][1] = 4.026994314122881; a[5][2] = 1.892581827858173; a[5][3] = 4.128260313629209; a[5][4] = 2.2014536036352004; a[5][5] = 4.766698824412957; a[5][6] = 0.06043600521483283; a[5][7] = 2.032265852068957;
  a[6][0] = 3.7766518197002865; a[6][1] = 1.0904284521422585; a[6][2] = 3.4994588859137687; a[6][3] = 1.0194010978266905; a[6][4] = 4.515175958749032; a[6][5] = 1.8451456145987892; a[6][6] = 2.371916437659893; a[6][7] = 4.053287546039443;
  a[7][0] = 4.878802463689035; a[7][1] = 2.7487864246294147; a[7][2] = 3.2757424993319333; a[7][3] = 4.201936778860012; a[7][4] = 1.5146220484445676; a[7][5] = 1.5486521524642134; a[7][6] = 3.1352419915662937; a[7][7] = 1.8079210200961593;
  a[8][0] = 0.818699957496874; a[8][1] = 2.785186472525103; a[8][2] = 2.805145896123074; a[8][3] = 1.1284402927775294; a[8][4] = 1.7103024563712566; a[8][5] = 0.605417761390975; a[8][6] = 3.3219855167575227; a[8][7] = 2.231919797346702;
  a[9][0] = 3.010772356179756; a[9][1] = 2.336018611315405; a[9][2] = 2.816504661318394; a[9][3] = 1.067023232252124; a[9][4] = 0.8604323716713869; a[9][5] = 2.269801809264433; a[9][6] = 4.24653300175199; a[9][7] = 3.591491279242459;

  b[0][0] = 4.893230864347019; b[0][1] = 4.143182290100175; b[0][2] = 1.367529077507406; b[0][3] = 1.171566693012801; b[0][4] = 1.387506147522225; b[0][5] = 0.8581040063960926; b[0][6] = 4.788949701565432; b[0][7] = 1.4226552565776358; b[0][8] = 4.23210082121998;
  b[1][0] = 4.94770131474454; b[1][1] = 1.2995487549507423; b[1][2] = 2.5869012434733296; b[1][3] = 2.905887508130225; b[1][4] = 2.9825528982525293; b[1][5] = 3.7414779395817437; b[1][6] = 2.1686571240285706; b[1][7] = 1.2693090917819556; b[1][8] = 2.5999912057261083;
  b[2][0] = 0.5675245455842293; b[2][1] = 4.059649696023441; b[2][2] = 0.6017461766672305; b[2][3] = 4.858170474859633; b[2][4] = 0.2039973821596991; b[2][5] = 3.263523696258719; b[2][6] = 2.33190711773182; b[2][7] = 4.686839348347044; b[2][8] = 0.6810237495986715;
  b[3][0] = 4.181108462000757; b[3][1] = 0.28275170744573086; b[3][2] = 3.924536916915122; b[3][3] = 4.27887778004206; b[3][4] = 1.932900529768526; b[3][5] = 1.9215651834823033; b[3][6] = 0.6230203594658079; b[3][7] = 3.8225902517593315; b[3][8] = 0.05300201837662999;
  b[4][0] = 0.8046934704525555; b[4][1] = 3.3416042224565596; b[4][2] = 4.536554392389148; b[4][3] = 2.1386186412902157; b[4][4] = 4.140443899453948; b[4][5] = 2.399387196640283; b[4][6] = 2.5716228571232778; b[4][7] = 0.5169650008864474; b[4][8] = 1.405005789308289;
  b[5][0] = 3.667820555971697; b[5][1] = 4.552885653434425; b[5][2] = 0.11956471916926059; b[5][3] = 3.7494283187002804; b[5][4] = 1.777736607015089; b[5][5] = 2.5804254284484385; b[5][6] = 3.354591305199672; b[5][7] = 3.2054162787640172; b[5][8] = 0.6162736750414249;
  b[6][0] = 2.9931905052097667; b[6][1] = 2.0281300240810687; b[6][2] = 3.8923464518082866; b[6][3] = 4.113624944953425; b[6][4] = 4.7265007180092535; b[6][5] = 2.0065048201255085; b[6][6] = 1.8178700041647577; b[6][7] = 0.9013857266745645; b[6][8] = 1.3079496129813521;
  b[7][0] = 4.0944915302357945; b[7][1] = 1.0710254969483595; b[7][2] = 2.7843089096965032; b[7][3] = 4.844454512160413; b[7][4] = 2.150308327868281; b[7][5] = 3.8010281507216606; b[7][6] = 0.5640531300359092; b[7][7] = 4.345413511579468; b[7][8] = 0.2830746470459733;

  let _ = matmul(10,8,9,a,b,c);
  matshow(10, 9, c)

};