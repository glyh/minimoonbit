
fn matshow(m: Int, n: Int, mat: Array[Array[Double]]) -> Unit {
  fn loop1(i: Int) -> Unit {
    if i <= m - 1 {
      fn loop2(j: Int) -> Unit {
        if j <= n - 1 {
          let _ = print_int(truncate(mat[i][j]));
          let _ = print_char(32);
          loop2(j+1)
        } else {
          print_endline()
        }
      }; 
      let _ = loop2(0);
      loop1(i+1)
    } else {
      ()
    }
  }; 
  loop1(0)
};

fn matmul(l: Int, m: Int, n: Int, a: Array[Array[Double]], b: Array[Array[Double]], c: Array[Array[Double]]) -> Unit {
  fn loop1(i: Int) -> Unit {
    if 0 <= i {
      fn loop2(j: Int) -> Unit {
        if 0 <= j {
          fn loop3(k: Int) -> Unit {
            if 0 <= k {
              c[i][j] = c[i][j] + a[i][k] * b[k][j];
              loop3(k - 1)
            } else {
              ()
            }
          };
          let _ = loop3(m - 1);
          loop2(j - 1)
        } else {
          ()
        }
      };
      let _ = loop2(n - 1);
      loop1(i - 1)
    } else {
      ()
    }
  };
  loop1(l - 1)
};

fn main {
  let dummy = Array::make(0, 0.0);
  fn gen_arr(m: Int, n: Int) -> Array[Array[Double]] {
    let mat = Array::make(m, dummy);
    fn init_arr(i: Int) -> Unit {
      if 0 <= i {
        mat[i] = Array::make(n, 0.0);
        init_arr(i - 1)
      } else {
        ()
      }
    };
    let _ = init_arr(m - 1);
    mat
  };

  let a = gen_arr(10, 10);
  let b = gen_arr(10, 10);
  let c = gen_arr(10, 10);

  a[0][0] = 5.71; a[0][1] = 2.99; a[0][2] = 1.27; a[0][3] = -1.2; a[0][4] = 3.85; a[0][5] = -2.38; a[0][6] = 7.07; a[0][7] = -3.66; a[0][8] = -0.77; a[0][9] = 7.66;
  a[1][0] = -7.72; a[1][1] = -3.64; a[1][2] = -4.7; a[1][3] = 0.96; a[1][4] = -3.05; a[1][5] = -5.44; a[1][6] = 5.15; a[1][7] = -9.01; a[1][8] = -0.81; a[1][9] = 1.0;
  a[2][0] = 6.42; a[2][1] = 3.88; a[2][2] = 1.39; a[2][3] = -6.05; a[2][4] = -0.51; a[2][5] = 5.65; a[2][6] = 7.8; a[2][7] = 5.27; a[2][8] = -0.85; a[2][9] = 2.36;
  a[3][0] = -3.69; a[3][1] = -6.34; a[3][2] = -1.18; a[3][3] = 0.18; a[3][4] = 6.54; a[3][5] = 3.33; a[3][6] = -3.95; a[3][7] = -5.8; a[3][8] = 2.27; a[3][9] = 1.84;
  a[4][0] = 6.37; a[4][1] = 5.16; a[4][2] = 9.95; a[4][3] = 4.57; a[4][4] = 3.51; a[4][5] = 6.27; a[4][6] = 3.89; a[4][7] = 9.66; a[4][8] = 0.43; a[4][9] = -2.1;
  a[5][0] = -2.21; a[5][1] = -8.26; a[5][2] = -7.76; a[5][3] = -3.47; a[5][4] = 9.23; a[5][5] = -3.59; a[5][6] = -4.49; a[5][7] = -1.02; a[5][8] = -0.53; a[5][9] = -6.34;
  a[6][0] = 8.49; a[6][1] = 8.29; a[6][2] = 3.39; a[6][3] = -6.45; a[6][4] = -4.2; a[6][5] = 9.37; a[6][6] = -7.88; a[6][7] = -3.89; a[6][8] = 3.7; a[6][9] = -8.51;
  a[7][0] = -1.3; a[7][1] = 9.36; a[7][2] = -7.58; a[7][3] = -2.48; a[7][4] = -5.52; a[7][5] = -6.25; a[7][6] = 0.95; a[7][7] = -5.38; a[7][8] = -6.98; a[7][9] = -1.37;
  a[8][0] = -6.29; a[8][1] = -8.16; a[8][2] = -6.31; a[8][3] = -5.41; a[8][4] = 0.72; a[8][5] = 8.89; a[8][6] = -1.03; a[8][7] = 3.63; a[8][8] = 2.56; a[8][9] = -8.58;
  a[9][0] = -9.7; a[9][1] = -6.76; a[9][2] = 8.55; a[9][3] = -6.56; a[9][4] = 1.11; a[9][5] = -6.31; a[9][6] = 7.5; a[9][7] = 2.46; a[9][8] = 1.38; a[9][9] = -4.59;

  b[0][0] = -2.63; b[0][1] = 3.98; b[0][2] = 1.61; b[0][3] = -1.89; b[0][4] = 0.13; b[0][5] = 1.19; b[0][6] = -1.68; b[0][7] = 0.28; b[0][8] = -5.81; b[0][9] = -8.44;
  b[1][0] = -4.75; b[1][1] = 9.77; b[1][2] = 4.18; b[1][3] = 2.71; b[1][4] = -9.21; b[1][5] = -9.9; b[1][6] = 8.85; b[1][7] = 1.44; b[1][8] = -1.18; b[1][9] = 1.05;
  b[2][0] = -0.99; b[2][1] = 6.96; b[2][2] = 9.88; b[2][3] = 4.38; b[2][4] = 0.98; b[2][5] = 4.82; b[2][6] = -5.71; b[2][7] = 6.05; b[2][8] = -1.27; b[2][9] = 0.28;
  b[3][0] = 0.06; b[3][1] = 8.84; b[3][2] = -1.21; b[3][3] = -9.9; b[3][4] = -4.34; b[3][5] = 3.51; b[3][6] = 0.17; b[3][7] = -5.78; b[3][8] = 2.15; b[3][9] = -3.5;
  b[4][0] = 5.02; b[4][1] = 9.02; b[4][2] = 0.08; b[4][3] = 9.65; b[4][4] = -8.58; b[4][5] = -8.78; b[4][6] = -5.9; b[4][7] = -7.91; b[4][8] = -4.82; b[4][9] = 5.38;
  b[5][0] = 5.08; b[5][1] = -3.86; b[5][2] = 3.38; b[5][3] = -4.63; b[5][4] = 6.48; b[5][5] = 3.64; b[5][6] = 0.95; b[5][7] = 6.73; b[5][8] = -7.37; b[5][9] = -2.45;
  b[6][0] = -7.99; b[6][1] = -6.09; b[6][2] = 7.38; b[6][3] = 1.78; b[6][4] = 6.5; b[6][5] = 3.65; b[6][6] = -3.25; b[6][7] = 6.81; b[6][8] = -7.96; b[6][9] = 3.74;
  b[7][0] = -1.79; b[7][1] = -4.53; b[7][2] = 5.25; b[7][3] = 2.04; b[7][4] = 9.67; b[7][5] = 1.1; b[7][6] = 6.72; b[7][7] = -7.87; b[7][8] = 9.71; b[7][9] = 4.72;
  b[8][0] = 7.46; b[8][1] = 0.52; b[8][2] = 0.21; b[8][3] = 3.48; b[8][4] = 8.02; b[8][5] = -7.27; b[8][6] = -9.31; b[8][7] = -3.12; b[8][8] = -7.3; b[8][9] = 4.97;
  b[9][0] = 1.5; b[9][1] = -5.62; b[9][2] = 8.34; b[9][3] = 5.42; b[9][4] = 1.48; b[9][5] = -6.05; b[9][6] = -7.68; b[9][7] = 3.84; b[9][8] = -4.91; b[9][9] = 3.17;

  let _ = matmul(10,10,10,a,b,c);
  matshow(10, 10, c)

};